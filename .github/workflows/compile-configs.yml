name: PlatformIO CI

on: [push]

jobs:
  Build-BLTouch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [V4,V427]
        grid: [3,5]
        highspeed: [true,false]
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: backup Configs
      run: |
        mkdir backup
        cp Marlin/Configuration.h backup/Configuration.h
        cp Marlin/Configuration_adv.h backup/Configuration_adv.h
    - name: Copy Configs
      run: |
        cp Configuration\ Files/E3V2\ Templates/BLTouch-3x3/Configuration.h Marlin/Configuration.h
        cp Configuration\ Files/E3V2\ Templates/BLTouch-3x3/Configuration_adv.h Marlin/Configuration_adv.h
    - name: Run PlatformIO BL-Touch
      run: |
        sed -i "s/#define MOTHERBOARD.*/#define MOTHERBOARD BOARD_CREALITY_$BOARD/g" Marlin/Configuration.h
        sed -i "s/#define GRID_MAX_POINTS_X.*/#define GRID_MAX_POINTS_X $GRID/g" Marlin/Configuration.h
        if ($HS); then TEMP=; else TEMP=//; fi;
        sed -i "s[^ ]*#define BLTOUCH_HS_MODE/$TEMP#define BLTOUCH_HS_MODE/g" Marlin/Configuration_adv.h
        pio run
        if ($HS); then TEMP=-HS; else TEMP=; fi;
        mv .pio/build/STM32F103RET6_creality/*.bin Precompiled\ Firmware/BL-Touch/E3V2-BLTouch-$GRIDx$GRID$TEMP-$BOARD.bin
      env:
        BOARD: ${{ matrix.board }}
        GRID: ${{ matrix.grid }}
        HS: ${{ matrix.highspeed }}
    - name: Restore original config
      run: |
        mv backup/Configuration.h Marlin/Configuration.h 
        mv backup/Configuration_adv.h Marlin/Configuration_adv.h
        rmdir backup
    - name: Commit new builds
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'github.actions@users.noreply.github.com'
        git add .
        git commit -am "New Precompiled Firmware"
        git pull
        git push